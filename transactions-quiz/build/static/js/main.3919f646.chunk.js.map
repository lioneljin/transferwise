{"version":3,"sources":["api/quizQuestions.js","components/Question.js","components/AnswerOption.js","components/Quiz.js","components/Result.js","App.js","serviceWorker.js","index.js","svg/currency1.png","svg/currency2.png","svg/currency3.png","svg/currency4.png","svg/fox.png","svg/mobile.png","svg/logo.svg"],"names":["quizQuestions","image","question","answers","type","content","currencies","currency1","currency2","currency3","currency4","Question","props","currency","react_default","a","createElement","className","src","alt","AnswerOption","name","checked","answerType","answer","id","value","disabled","onChange","onAnswerSelected","htmlFor","answerContent","Quiz","react_transition_group","component","transitionName","transitionEnterTimeout","transitionLeaveTimeout","transitionAppear","transitionAppearTimeout","key","questionId","components_Question","answerOptions","map","components_AnswerOption","Result","console","log","animal","quizResult","height","fact","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","counter","answersCount","Correct","Incorrect","Wrong","result","transactionTime","transactionProgress","completed","timerActivate","handleAnswerSelected","bind","assertThisInitialized","_this2","shuffledAnswerOptions","shuffleArray","setState","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","event","_this3","setUserAnswer","currentTarget","setTimeout","setNextQuestion","setResults","getResults","objectSpread","defineProperty","answersCountKeys","keys","answersCountValues","maxAnswerCount","max","apply","filter","duration","_ref","progress","time","_ref2","_ref3","_ref4","components_Quiz","questionTotal","components_Result","_this4","es","active","onFinish","_ref5","onTimerFinish","onStart","_ref6","onTimerStart","onStop","onTimerStop","onTimeUpdate","_ref7","onTimerTimeUpdate","rc_progress_es","percent","strokeWidth","strokeColor","trailColor","renderResult","renderQuiz","mobile","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.3919f646.chunk.js","sourcesContent":["var quizQuestions = [\n  {\n      image: \"currency1\",\n      question: \"What country uses this coin?\",\n      answers: [\n          {\n              type: \"wrong\",\n              content: \"Hungary\"\n          },\n          {\n              type: \"Correct\",\n              content: \"Russia\"\n          },\n          {\n              type: \"right\",\n              content: \"Italy\"\n          }\n      ]\n  },\n  {\n      image: \"currency2\",\n      question: \"What country uses this coin?\",\n      answers: [\n          {\n              type: \"Correct\",\n              content: \"Hungary\"\n          },\n          {\n              type: \"wrong2\",\n              content: \"Finland\"\n          },\n          {\n              type: \"right\",\n              content: \"India\"\n          }\n      ]\n  },\n    {\n      image: \"currency3\",\n      question: \"What country uses this coins?\",\n      answers: [\n          {\n              type: \"wrong\",\n              content: \"Australia\"\n          },\n          {\n              type: \"Correct\",\n              content: \"Great Britain\"\n          },\n          {\n              type: \"right\",\n              content: \"Brazil\"\n          }\n      ]\n  },\n    {\n      image: \"currency4\",\n      question: \"What country uses this coins?\",\n      answers: [\n          {\n              type: \"Correct\",\n              content: \"Finland\"\n          },\n          {\n              type: \"wrong2\",\n              content: \"Germany\"\n          },\n          {\n              type: \"right\",\n              content: \"Russia\"\n          }\n      ]\n  },\n];\n\nexport default quizQuestions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport currency1 from '../svg/currency1.png';\nimport currency2 from '../svg/currency2.png';\nimport currency3 from '../svg/currency3.png';\nimport currency4 from '../svg/currency4.png';\n\nconst currencies = {\n\t'currency1': currency1,\n\t'currency2': currency2,\n\t'currency3': currency3,\n\t'currency4': currency4\n}\n\nfunction Question(props) {\n  const currency = currencies[props.image];\n  return <div>\n  \t<br />\n  \t<div className=\"App-header\">\n    \t<img src={currency} className=\"App-logo\" alt=\"logo\" />\n    </div>\t\n\t<br />\n\t<h2 className=\"question\">{props.content}</h2>\n\t</div>;\n}\n\nQuestion.propTypes = {\n  content: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired\n};\n\nexport default Question;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AnswerOption(props) {\n  return (\n    <li className=\"answerOption\">\n      <input\n        type=\"radio\"\n        className=\"radioCustomButton\"\n        name=\"radioGroup\"\n        checked={props.answerType === props.answer}\n        id={props.answerType}\n        value={props.answerType}\n        disabled={props.answer}\n        onChange={props.onAnswerSelected}\n      />\n      <label className=\"radioCustomLabel\" htmlFor={props.answerType}>\n        {props.answerContent}\n      </label>\n    </li>\n  );\n}\n\nAnswerOption.propTypes = {\n  answerType: PropTypes.string.isRequired,\n  answerContent: PropTypes.string.isRequired,\n  answer: PropTypes.string.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default AnswerOption;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../components/Question';\nimport QuestionCount from '../components/QuestionCount';\nimport AnswerOption from '../components/AnswerOption';\n\nfunction Quiz(props) {\n  function renderAnswerOptions(key) {\n    return (\n      <AnswerOption\n        key={key.content}\n        answerContent={key.content}\n        answerType={key.type}\n        answer={props.answer}\n        questionId={props.questionId}\n        onAnswerSelected={props.onAnswerSelected}\n      />\n    );\n  }\n\n  return (\n    <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n      <div key={props.questionId}>\n        <Question content={props.question} image={props.image} />\n        <ul className=\"answerOptions\">\n          {props.answerOptions.map(renderAnswerOptions)}\n        </ul>\n      </div>\n    </CSSTransitionGroup>\n  );\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default Quiz;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\n\nfunction Result(props) {\n  console.log('00000000', props.animal);\n  return (\n    <CSSTransitionGroup\n      className=\"container result\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n      <div>\n        <p className=\"Text-center\">{props.quizResult}</p>\n      </div>\n      <hr />\n      <div>\n        <p className=\"Text-center\">\n        <img src={props.image} height=\"250px\" /><br />\n        {props.fact}</p>\n      </div>\n\n    </CSSTransitionGroup>\n  );\n}\n\nResult.propTypes = {\n  quizResult: PropTypes.node.isRequired,\n  image: PropTypes.string.isRequired,\n  fact: PropTypes.node.isRequired\n};\n\nexport default Result;\n","import React, { Component } from 'react';\nimport quizQuestions from './api/quizQuestions';\nimport Quiz from './components/Quiz';\nimport Result from './components/Result';\nimport logo from './svg/logo.svg';\nimport './App.css';\nimport Timer from 'react-timer-wrapper';\nimport { Line } from 'rc-progress';\nimport animal from './svg/fox.png';\nimport mobile from './svg/mobile.png';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      counter: 0,\n      questionId: 1,\n      question: '',\n      image: '',\n      answerOptions: [],\n      answer: '',\n      answersCount: {\n        Correct: 0,\n        Incorrect: 0,\n        Wrong: 0\n      },\n      result: '',\n      transactionTime: 5000,\n      transactionProgress: 0,\n      completed: false,\n      timerActivate: false \n    };\n\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n  }\n\n  componentWillMount() {\n    const shuffledAnswerOptions = quizQuestions.map(question =>\n      this.shuffleArray(question.answers)\n    );\n    this.setState({\n      question: quizQuestions[0].question,\n      image: quizQuestions[0].image,\n      answerOptions: shuffledAnswerOptions[0],\n      transactionProgress: 0\n    });\n  }\n\n  shuffleArray(array) {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  handleAnswerSelected(event) {\n    this.setUserAnswer(event.currentTarget.value);\n\n    if (this.state.questionId < quizQuestions.length) {\n      setTimeout(() => this.setNextQuestion(), 300);\n    } else {\n      setTimeout(() => this.setResults(this.getResults()), 300);\n    }\n  }\n\n  setUserAnswer(answer) {\n    this.setState((state, props) => ({\n      answersCount: {\n        ...state.answersCount,\n        [answer]: state.answersCount[answer] + 1\n      },\n      answer: answer\n    }));\n  }\n\n  setNextQuestion() {\n    const counter = this.state.counter + 1;\n    const questionId = this.state.questionId + 1;\n\n    this.setState({\n      counter: counter,\n      questionId: questionId,\n      question: quizQuestions[counter].question,\n      image: quizQuestions[counter].image,\n      answerOptions: quizQuestions[counter].answers,\n      answer: ''\n    });\n  }\n\n  getResults() {\n    const answersCount = this.state.answersCount;\n    const answersCountKeys = Object.keys(answersCount);\n    const answersCountValues = answersCountKeys.map(key => answersCount[key]);\n    const maxAnswerCount = Math.max.apply(null, answersCountValues);\n\n    return answersCountKeys.filter(key => answersCount[key] === maxAnswerCount);\n  }\n\n  setResults(result) {\n    if (result.length === 1) {\n      this.setState({ result: this.state.answersCount['Correct'] });\n    } else {\n      this.setState({ result: 0 });\n    }\n  }\n\n  onTimerStart({duration, progress, time}) {\n    console.log('====onTimerStart', duration, progress, time, this);\n    //this.setState( {transactionProgress: 0} );\n  }\n \n  onTimerStop({duration, progress, time}) {\n    console.log('====onTimerStop', duration, progress, time);\n  }\n \n  onTimerTimeUpdate({duration, progress, time}) {\n  }\n \n  onTimerFinish({duration, progress, time}) {\n  }\n\n  renderQuiz() {\n    return (\n      <Quiz\n        answer={this.state.answer}\n        answerOptions={this.state.answerOptions}\n        questionId={this.state.questionId}\n        question={this.state.question}\n        image={this.state.image}\n        questionTotal={quizQuestions.length}\n        onAnswerSelected={this.handleAnswerSelected}\n      />\n    );\n  }\n\n  renderResult() {\n    // fox 18 m/s; Budapest - London 1725800 meters; transaction - 5 seconds; 100 meters - Football field; 1725 fields\n    const city1 = \"Budapest\";\n    const city2 = \"London\";\n    const fact = (\n      <div>It took <strong>{this.state.transactionTime} seconds</strong> fro your money to transfer from {city1} to {city2}. The same time <strong>a fox</strong> can run only <strong>1 football field</strong>, your money run <strong>1725</strong> fields</div>);\n    const result = (<div>You gave <strong>{this.state.answersCount['Correct']}</strong> correct answers, you earn <strong>{this.state.answersCount['Correct']*3} TWCoins</strong></div>)\n    return <Result quizResult={result} image={animal} fact={fact} />;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {!this.state.timerActivate ? \n          <div>\n            <div className=\"App-header\">\n              <h2>TransferWize quiz</h2>\n              <p>If you pass if faster than we commit your transaction you'll get TWPoints!</p>\n              <p>\n                <img src={mobile} onClick={() => {this.setState({timerActivate: true})}} />\n              </p>\n            </div>\n          </div>\n          : \n          <div>\n            <div className=\"App-header\">\n              <h2>TransferWize quiz</h2>\n              <p>If you pass if faster than we commit your transaction you'll get TWPoints!</p>\n              <Timer\n                active={this.state.timerActivate}\n                duration={this.state.transactionTime}\n                onFinish={({duration, progress, time}) => {this.setState({completed: true}); return this.onTimerFinish(duration, progress, time);} }\n                onStart={({duration, progress, time}) => { \n                  this.setState( {transactionProgress: progress} ); \n                  return this.onTimerStart(duration, progress, time); } }\n                onStop={this.onTimerStop}\n                onTimeUpdate={({duration, progress, time}) => { \n                  this.setState( {transactionProgress: progress} ); \n                  return this.onTimerTimeUpdate(duration, progress, time); } }\n              />\n            </div>\n            <br />\n            <Line percent={this.state.transactionProgress  * 100} strokeWidth=\"2\" strokeColor=\"#00b9ff\" trailColor=\"#5d7079\" />\n            {this.state.result || this.state.completed ? this.renderResult() : this.renderQuiz()}\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/currency1.3d8ab2ab.png\";","module.exports = __webpack_public_path__ + \"static/media/currency2.b3e82f86.png\";","module.exports = __webpack_public_path__ + \"static/media/currency3.09ab4333.png\";","module.exports = __webpack_public_path__ + \"static/media/currency4.a6083cb5.png\";","module.exports = __webpack_public_path__ + \"static/media/fox.49084527.png\";","module.exports = __webpack_public_path__ + \"static/media/mobile.db579408.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.84287d09.svg\";"],"sourceRoot":""}